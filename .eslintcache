
[{"C:\\Users\\Stephanie\\workspace\\capstone\\src\\index.js":"1","C:\\Users\\Stephanie\\workspace\\capstone\\src\\reportWebVitals.js":"2","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\PropsAndState.js":"3","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsProvider.js":"4","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsList.js":"5","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatCard.js":"6","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Capstone.js":"7","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Login.js":"8","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\ApplicationViews.js":"9","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Home.js":"10","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Register.js":"11","C:\\Users\\Stephanie\\workspace\\capstone\\src\\Home.js":"12","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatForm.js":"13","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatDetails.js":"14","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Users\\UsersProvider.js":"15","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatProvider.js":"16","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatCard.js":"17","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatForm.js":"18","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatDetails.js":"19"},{"size":406,"mtime":1612458170448,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1611956400733,"results":"22","hashOfConfig":"21"},{"size":170,"mtime":1611956400730,"results":"23","hashOfConfig":"21"},{"size":1773,"mtime":1612676527361,"results":"24","hashOfConfig":"21"},{"size":2641,"mtime":1612676527360,"results":"25","hashOfConfig":"21"},{"size":841,"mtime":1612677162963,"results":"26","hashOfConfig":"21"},{"size":716,"mtime":1612195752641,"results":"27","hashOfConfig":"21"},{"size":2431,"mtime":1612676527363,"results":"28","hashOfConfig":"21"},{"size":1555,"mtime":1612676527354,"results":"29","hashOfConfig":"21"},{"size":289,"mtime":1612195112878,"results":"30","hashOfConfig":"21"},{"size":3529,"mtime":1612296200994,"results":"31","hashOfConfig":"21"},{"size":276,"mtime":1612192261847,"results":"32","hashOfConfig":"21"},{"size":5150,"mtime":1612676527360,"results":"33","hashOfConfig":"21"},{"size":2691,"mtime":1612676527359,"results":"34","hashOfConfig":"21"},{"size":1316,"mtime":1612302680988,"results":"35","hashOfConfig":"21"},{"size":1667,"mtime":1612676527357,"results":"36","hashOfConfig":"21"},{"size":1577,"mtime":1612676527355,"results":"37","hashOfConfig":"21"},{"size":4589,"mtime":1612676527356,"results":"38","hashOfConfig":"21"},{"size":783,"mtime":1612676527356,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1akukpu",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},"C:\\Users\\Stephanie\\workspace\\capstone\\src\\index.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\reportWebVitals.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\PropsAndState.js",["89"],"import React, { useState } from \"react\"\r\n\r\nexport const PropsAndState = ({ yourName }) => {\r\n \r\n\r\n  return (\r\n    <>\r\n      <h3>Welcome, {yourName} </h3>\r\n    </>\r\n  )\r\n}",["90","91"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsList.js",["92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { CatCard } from \"./CatCard\"\r\nimport { CatContext } from \"./CatsProvider\"\r\nimport { Button, Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { UserContext } from \"../Users/UsersProvider\";\r\nimport { ChatContext } from \"../CatChat/ChatProvider\";\r\n\r\n\r\n\r\n\r\nexport const CatList = () => {\r\n    const { cats, getCats, getCatsById } = useContext(CatContext)\r\n    const { users, getUsers, getUsersById } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const { catZip } = useParams();\r\n\r\n\r\n    const [filteredCats, setFilteredCats] = useState([])\r\n/*\r\nabove. use state is letting you know that the state of cats has been changed. now we want to filter the cats by their\r\nzip codes. when we do this we want to update what is showing on the page I.e. set a new state - cats\r\nare being filtered, trigger the use effect and \"refresh\" the page\r\n*/\r\n    const currentUser = (localStorage.getItem(\"capstone_customer\"))\r\n/*\r\nlocal storage-capstone customer is giving us a number. We are using that number and setting it as the variable\r\ncurrentUser.\r\nn\r\n*/\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    /*\r\n    use effect- its going to get all of the cats\r\n    its giving you back all off the cats\r\n    it goes and gets one specific user based on hte parameter currentUser (that is a # that youre passing to it)\r\n    then it is using all of the cats that you have gotten, giltering over all of them and finding all\r\n    of them whose zip code matches the curerent users zip code. you then reset the state of the page.\r\n    show me the set of filtered cats by the filtered by zip cats.\r\n    */\r\n\r\n    useEffect(() => {\r\n        getCats()\r\n            .then((response) => {\r\n                getUsersById(currentUser)\r\n                    .then((user) => {\r\n                        const filteredCatByZip = cats.filter(cat => cat.zip === user.zip)\r\n                        \r\n                        setFilteredCats(filteredCatByZip)\r\n                    })\r\n\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2>Cats</h2>\r\n            <Button color=\"info\" on onClick={() => { history.push(\"/cats/create\") }}>\r\n                Add A Cat\r\n            </Button>{' '}\r\n            <div>\r\n\r\n            </div>\r\n            <div className=\"cats\">\r\n                {console.log(cats, \"allCats\")}\r\n                {\r\n                    filteredCats.map(cat => {\r\n                        \r\n                     \r\n// take the list of filteredCats you used in use state and give me their info\r\n                        return <CatCard key={cat.id} cat={cat} zip={cat.zip}  />\r\n                    })\r\n\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatCard.js",["104","105","106","107","108"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Capstone.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Login.js",["109","110","111","112","113","114","115","116"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\ApplicationViews.js",["117"],"import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport { CatDetail } from \"../components/Cats/CatDetails\"\r\nimport { CatForm } from \"../components/Cats/CatForm\"\r\nimport { CatList } from \"../components/Cats/CatsList\"\r\nimport { CatProvider } from \"../components/Cats/CatsProvider\"\r\nimport { ChatProvider } from \"./CatChat/ChatProvider\"\r\nimport { Home } from \"./Home\"\r\nimport { UserProvider } from \"./Users/UsersProvider\"\r\nimport { ChatForm } from \"./CatChat/ChatForm\"\r\nimport { ChatList } from \"./CatChat/ChatDetails\"\r\n\r\n\r\nexport const ApplicationViews = () => {\r\n    return (\r\n        <>\r\n\r\n\r\n            <CatProvider>\r\n                <UserProvider>\r\n                    <ChatProvider>\r\n                        <Route exact path=\"/cats\">\r\n                            <CatList />\r\n                        </Route>\r\n                        <Route path=\"/cats/detail/:catId(\\d+)\">\r\n                            <CatDetail />\r\n                        </Route>\r\n                        <Route path=\"/cats/detail/:catId(\\d+)\">\r\n\r\n                            <ChatForm />\r\n\r\n                        </Route>\r\n                        <Route path=\"/cats/detail/:catId(\\d+)\">\r\n\r\n                            <ChatList />\r\n\r\n                        </Route>\r\n\r\n\r\n                        <Route exact path=\"/cats/create\">\r\n                            <CatForm />\r\n                        </Route>\r\n\r\n                    </ChatProvider>\r\n                </UserProvider>\r\n            </CatProvider>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Home.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Register.js",["118"],"import React, { useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\nexport const Register = (props) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const zip = useRef()\r\n    const verifyPassword = useRef()\r\n    const conflictDialog = useRef()\r\n    const history = useHistory()\r\n    \r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n        .then(res => res.json())\r\n        .then(user => !!user.length)\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        \r\n        \r\n        existingUserCheck()\r\n        .then((userExists) => {\r\n            if (!userExists) {\r\n                fetch(\"http://localhost:8088/users\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email.current.value,\r\n                        name: `${firstName.current.value} ${lastName.current.value}`,\r\n                        zip: parseInt(zip.current.value)\r\n                        \r\n                    })\r\n                })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                localStorage.setItem(\"capstone_customer\", createdUser.id)\r\n                                history.push(\"/cats\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Mew Girl</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputZip\"> Zip Code </label>\r\n                    <input ref={zip} type=\"zip\" name=\"zip\" className=\"form-control\" placeholder=\"Zip Code\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\Home.js",[],["119","120"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatForm.js",["121","122","123","124","125","126"],"import { Button, Form, FormGroup, Label, Input, FormText, CardText } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { CatContext } from './CatsProvider';\r\nimport { UserContext } from '../Users/UsersProvider';\r\n\r\nexport const CatForm = () => {\r\n    const { addCat, getCatById, getCats,updateCat } = useContext(CatContext)\r\n    const { users, getUsers } = useContext(UserContext)\r\n    \r\n\r\n    //for edit, hold on to state of cat in this view\r\n    const [cat, setCat] = useState({\r\n      id: 0,\r\n      name: \"\",\r\n      userId: 0,\r\n      zip: 0,\r\n      color: \"\",\r\n\r\n    })\r\n\r\n    //wait for data before button is active. Look at the button to see how it's setting itself to disabled or not based on this state\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Now that the form can be used for editing as well as adding an cat, you need access to the cat id for fetching the cat you want to edit\r\n    const { catId } = useParams();\r\n      const history = useHistory();\r\n      \r\n          // Get customers and locations. If catId is in the URL, getCatById\r\n    useEffect(() => {\r\n      getUsers().then(getCats)\r\n        console.log(getCatById,\"all cats?\")\r\n    \r\n    }, [])\r\n\r\n    //  Ok soo to get capstone customer getItem. ParseInt it later in cat props. add the value of the capstone customer to the \r\n    // new cat using dot notation\r\n    const handleControlledInputChange = (event) => {\r\n      const newCat = { ...cat }\r\n      newCat[event.target.id] = event.target.value\r\n      const currentUser = localStorage.getItem(\"capstone_customer\")\r\n      console.log (currentUser,\"user\")\r\n        if  (event.target.name.includes(\"adopted\")) { \r\n          newCat.userId = currentUser\r\n          \r\n          console.log(currentUser,\"whats here?\")\r\n        }\r\n        else { \r\n            event.target.value = 0\r\n        }\r\n      setCat(newCat)\r\n      console.log(newCat)\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleAddCat= (event) => {\r\n        \r\n      if (parseInt(cat.zip) === 0) {\r\n          window.alert(\"Please input a zip code\")\r\n      } \r\n     else {\r\n        setIsLoading(true);\r\n        {\r\n            if\r\n                 (parseInt(cat.color) === 0) \r\n              window.alert(\"Please select a description\")\r\n            }\r\n\r\n        if (catId){\r\n          //PUT - update\r\n          updateCat({\r\n              id: cat.id,\r\n              name: cat.name,\r\n              color: cat.color,\r\n              zip: parseInt(cat.zip),\r\n              userId: parseInt(cat.userId)\r\n          })\r\n          .then(() => history.push(`/cats/detail/${cat.id}`))\r\n        }else {\r\n          //POST - add\r\n          addCat({\r\n            id: cat.id,\r\n            name: cat.name,\r\n            color: cat.color,\r\n            zip: parseInt(cat.zip),\r\n            userId: parseInt(cat.userId)\r\n          })\r\n          .then(() => history.push(\"/cats\"))\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // // Get customers and locations. If catId is in the URL, getCatById\r\n    // useEffect(() => {\r\n        \r\n    // //   getCustomers().then(getLocations).then(() => {\r\n    //     if (catId) {\r\n    //       getCatById(catId)\r\n    //       .then(cat => {\r\n    //           setCat(cat)\r\n    //           setIsLoading(false)\r\n    //       })\r\n    //     } else {\r\n    //       setIsLoading(false)\r\n    //     }\r\n      \r\n    // }, [])\r\n// export const CatForm = (cat) => {\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <Label for=\"newCatName\">Name</Label>\r\n        <Input type=\"text\" name=\"catName\" id=\"name\"onChange={handleControlledInputChange}  required autoFocus className=\"form-control\"placeholder=\"Name of Furry Friend\"value={cat.name} />\r\n  \r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"zip\">Zip Code</Label>\r\n        <Input type=\"text\" name=\"zip\" id=\"zip\"onChange={handleControlledInputChange}  required autoFocus className=\"form-control\" placeholder=\"Zip Code of Cat\"   value = {cat.zip}/>\r\n      \r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"color\">Description</Label>\r\n        <Input type=\"select\" name=\"color\" id=\"color\"onChange={handleControlledInputChange}  required autoFocus className=\"form-control\" placeholder=\" Color of Cat\" value = {cat.color}  >\r\n        <option value = \"null\" >Please Select a Color</option>\r\n          <option >Orange</option>\r\n          <option>Yellow</option>\r\n          <option>Gray</option>\r\n          <option>Black</option>\r\n          <option>White</option>\r\n          <option>Brown</option>\r\n          <option>Calico</option>\r\n          <option>Striped</option>\r\n\r\n\r\n        </Input>\r\n      </FormGroup>\r\n    \r\n    \r\n      {/* <FormGroup>\r\n        <Label for=\"exampleFile\">File</Label>\r\n        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n        <FormText color=\"muted\">\r\n          This is some placeholder block-level help text for the above input.\r\n          It's a bit lighter and easily wraps to a new line.\r\n        </FormText>\r\n      </FormGroup> */}\r\n      <FormGroup tag=\"fieldset\">\r\n        <legend>Radio Buttons</legend>\r\n        <FormGroup check>\r\n          <Label check>  \r\n          {/* <Label for=\"newCatName\">Name</Label> */}\r\n            <Input type=\"radio\" name=\"adopted\" id=\"userId\"onChange={handleControlledInputChange} value={cat.userId}  />{' '} \r\n            Do you take this cat to be yours for better or worse as long as you both shall live...in this neighborhood?\r\n            </Label>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"radio\" name=\"not\" id=\"userId\"onChange={handleControlledInputChange} value={cat.userId} />{' '}\r\n            This furry friend is in need of a home\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup check disabled>\r\n          {/* <Label check>\r\n            <Input type=\"radio\" name=\"radio1\" disabled />{' '}\r\n            Option three is disabled\r\n          </Label> */}\r\n        </FormGroup>         idk if this cat has a home or not?\r\n      </FormGroup>\r\n   <div>\r\n      <Button\r\n      className=\"btn btn-primary\"\r\n        //   disabled={isLoading}\r\n          onClick={event => {\r\n            // event.preventDefault() // Prevent browser from submitting the form and refreshing the page\r\n            handleAddCat()\r\n          }}>{catId ? \"Save Cat\" : \"Add Cat\"}</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\n// export default Example;","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatDetails.js",["127","128","129","130","131"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { Button,} from 'reactstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { CatContext } from \"./CatsProvider\"\r\nimport { ChatContext } from \"../CatChat/ChatProvider\";\r\nimport { ChatCard } from \"../CatChat/ChatCard\";\r\nimport { UserContext } from \"../Users/UsersProvider\";\r\n\r\nexport const CatDetail = () => {\r\n  const { getCatById, deleteCat } = useContext(CatContext)\r\nconst {chats, getChats, getChatById } =useContext(ChatContext) \r\nconst {getUsersById} = useContext(UserContext)\r\n\r\nconst [filteredChats, setFilteredChats] = useState([])\r\n\r\n\tconst [cat, setCat] = useState({})\r\n\r\n\tconst {catId} = useParams();\r\n    \r\n    useEffect(() => {\r\n        getCatById(catId)\r\n        .then((response) => {\r\n          getChats()\r\n          .then((chat) => {\r\n            const filteredChatsByCat = chats.filter(chat => chat.catId === cat.id)\r\n            setFilteredChats(filteredChatsByCat)\r\n            setCat(response)\r\n\r\n\r\n          })\r\n\r\n        })\r\n    }, [] )\r\n\r\n  \r\n    \r\n\r\n    const history = useHistory();\r\n    \r\n    const handleRelease = () => {\r\n        deleteCat(cat.id)\r\n          .then(() => {\r\n            history.push(\"/cats\")\r\n          })\r\n      }\r\n  return (\r\n    <section className=\"cat\">\r\n      <h3 className=\"cat__name\">{cat.name}</h3>\r\n      <div className=\"cat__color\">{cat?.color}</div>\r\n      <div className=\"cat__zip\">Location: {cat.zip}</div>\r\n      {/* <div className=\"cat__adopter\">Customer: {cat?.adopterId}</div> */}\r\n      <div>\r\n      <Button\r\n      className=\"btn btn-primary\"\r\n        //   disabled={isLoading}\r\n        onClick={handleRelease}>Delete Cat</Button>\r\n          <Button\r\n      className=\"btn btn-primary\"\r\n        //   disabled={isLoading}\r\n        // onClick={handleRelease}>Cat Chat</Button>\r\n         onClick={() => {\r\n            history.push(`/chat/create/`)\r\n          }}>Cat Chat</Button>\r\n                  <div className=\"chats\">\r\n                  \r\n\r\n                    {\r\n            filteredChats.map(chat => {\r\n\r\n            \r\n                    return <ChatCard key={chat.id} chat={chat}  />\r\n                })\r\n            }\r\n        {/* {\r\n\t\t\tchats.filter(chat => {\r\n\t\t\t\treturn <ChatCard key={chat.id} chat={chat} />\r\n\t\t\t})\r\n        } */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Users\\UsersProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatCard.js",["132","133","134","135","136","137","138","139","140","141","142","143"],"import React from \"react\"\r\n// import { Link } from \"react-router-dom\"\r\n\r\n\r\nexport const ChatCard = ({ chat }) => (\r\n    <section className=\"chat\">\r\n        <h3 className=\"chat__note\">{chat.note}</h3>\r\n        {/* <Link to={`/cats/detail/${cat.id}`}>\r\n            { cat.name }\r\n          </Link> */}\r\n        {/* <address className=\"cat__zip\">{cat.zip}</address> */}\r\n    </section>\r\n)","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatForm.js",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import { Button, Form, FormGroup, Label, Input, FormText, CardText } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { CatContext } from '../Cats/CatsProvider';\r\nimport { UserContext } from '../Users/UsersProvider';\r\nimport { ChatContext } from './ChatProvider';\r\nimport { ChatCard } from './ChatCard';\r\n\r\n\r\n\r\nexport const ChatForm = () => {\r\n    const { chats, getChats, getChatById, updateChat, addChat } = useContext(ChatContext)\r\n    const {  getCatById, getCats, cats} = useContext(CatContext)\r\n    const { users, getUsersById } = useContext(UserContext)\r\n\r\n\r\n    const [filteredChats, setFilteredChats] = useState([])\r\n    const currentUser = (localStorage.getItem(\"capstone_customer\"))\r\n// *I want to get all of the notes with a matching cat id\r\n// *display all of the notes for the specific cat\r\n// be able to add/ edit/ delete a specif note\r\n\r\n    //for edit, hold on to state of cat in this view\r\n    const [chat, setChat] = useState({\r\n        note: \"\",\r\n        catId: 0,\r\n        userId: 0\r\n    })\r\n\r\n    //wait for data before button is active. Look at the button to see how it's setting itself to disabled or not based on this state\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Now that the form can be used for editing as well as adding an cat, you need access to the cat id for fetching the cat you want to edit\r\n    const { chatId } = useParams();\r\n    const history = useHistory();\r\n\r\n    // Get customers and locations. If catId is in the URL, getCatById\r\n    useEffect(() => {\r\n        // getCats()\r\n        // console.log(getCats, \"wheres my shit\")\r\n        // .then(getChats)\r\n        \r\n        // getCatById()\r\n        // .then((response) => {\r\n                getChats()\r\n                   \r\n                getUsersById(currentUser)\r\n\r\n            \r\n    }, [])\r\n \r\n\r\n    //  Ok soo to get capstone customer getItem. ParseInt it later in cat props. add the value of the capstone customer to the \r\n    // new cat using dot notation\r\n    const handleControlledInputChange = (event) => {\r\n        const newChat = { ...chat }\r\n        newChat[event.target.id] = event.target.value\r\n        const currentUser = localStorage.getItem(\"capstone_customer\")\r\n        newChat.userId = currentUser\r\n    console.log(newChat, \"chat adds?\") \r\n    \r\n        setChat(newChat)\r\n        console.log(newChat)\r\n    }\r\n\r\n\r\n  \r\n  \r\n      \r\n          //invoke addAnimal passing animal as an argument.\r\n          //once complete, change the url and display the animal list\r\n    \r\n\r\n    const handleAddChat = (event) => {\r\n        \r\n        if (chatId) {\r\n            //PUT - update\r\n            updateChat({\r\n                id: chat.id,\r\n                note: chat.note,\r\n                catId: parseInt(cats.id),\r\n                userId: parseInt(chat.userId)\r\n            })\r\n                .then(() => history.push(`/chats/detail/${chat.id}`))\r\n        } else {\r\n            //POST - add\r\n            addChat({\r\n                id: chat.id,\r\n                note: chat.note,\r\n                catId: parseInt(cats.id),\r\n                userId: parseInt(chat.userId)\r\n\r\n            })\r\n                .then(() => history.push(\"/chats\"))\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Form className>\r\n            <h2>Cat Chat</h2>\r\n            <div className=\"chat\"></div>\r\n            <FormGroup>\r\n                <Label for=\"newChat\"></Label>\r\n                <Input type=\"text\" name=\"chat\" id=\"note\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Type Your message Here\" value={chat.note} />\r\n                </FormGroup>\r\n                {\r\n                    filteredChats.map(chat => {\r\n                        // take the list of filteredCats you used in use state and give me their info\r\n                        return <ChatCard key={chat.id}   note={chat.note}/>\r\n                    })\r\n\r\n                } \r\n                <div> \r\n        \r\n                <Button color=\"info\" onClick={event  => { \r\n                    \r\n                    handleAddChat()\r\n\r\n                }}>{chatId ? \"Save Chat\" : \"Add Cat\"}</Button>\r\n                </div> \r\n\r\n    </Form>\r\n  );\r\n}\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatDetails.js",["161","162","163","164","165","166"],"import React, { useContext, useEffect } from \"react\"\r\nimport { ChatCard } from \"./ChatCard\"\r\nimport { ChatContext } from \"./ChatProvider\"\r\n\r\n\r\nexport const ChatList = () => {\r\n  // This state changes when `getAnimals()` is invoked below\r\n  const { chats, getChats} = useContext(ChatContext)\r\n\r\n  //useEffect - reach out to the world for something\r\n  useEffect(() => {\r\n    console.log(\"AnimalList: useEffect - getAnimals\")\r\n    getChats()\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      {console.log(\"ChatList: Render\", chats)}\r\n      {\r\n        chats.map(chat => {\r\n          return <ChatCard key={chat.id} chat={chat} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}",{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"167","severity":1,"message":"175","line":5,"column":18,"nodeType":"169","messageId":"170","endLine":5,"endColumn":26},{"ruleId":"167","severity":1,"message":"176","line":5,"column":28,"nodeType":"169","messageId":"170","endLine":5,"endColumn":40},{"ruleId":"167","severity":1,"message":"177","line":5,"column":42,"nodeType":"169","messageId":"170","endLine":5,"endColumn":56},{"ruleId":"167","severity":1,"message":"178","line":5,"column":58,"nodeType":"169","messageId":"170","endLine":5,"endColumn":70},{"ruleId":"167","severity":1,"message":"179","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":21},{"ruleId":"167","severity":1,"message":"180","line":15,"column":28,"nodeType":"169","messageId":"170","endLine":15,"endColumn":39},{"ruleId":"167","severity":1,"message":"181","line":16,"column":13,"nodeType":"169","messageId":"170","endLine":16,"endColumn":18},{"ruleId":"167","severity":1,"message":"182","line":16,"column":20,"nodeType":"169","messageId":"170","endLine":16,"endColumn":28},{"ruleId":"167","severity":1,"message":"183","line":18,"column":13,"nodeType":"169","messageId":"170","endLine":18,"endColumn":19},{"ruleId":"167","severity":1,"message":"184","line":32,"column":12,"nodeType":"169","messageId":"170","endLine":32,"endColumn":21},{"ruleId":"167","severity":1,"message":"185","line":32,"column":23,"nodeType":"169","messageId":"170","endLine":32,"endColumn":35},{"ruleId":"186","severity":1,"message":"187","line":50,"column":8,"nodeType":"188","endLine":50,"endColumn":10,"suggestions":"189"},{"ruleId":"167","severity":1,"message":"190","line":3,"column":16,"nodeType":"169","messageId":"170","endLine":3,"endColumn":23},{"ruleId":"167","severity":1,"message":"191","line":3,"column":25,"nodeType":"169","messageId":"170","endLine":3,"endColumn":33},{"ruleId":"167","severity":1,"message":"192","line":3,"column":35,"nodeType":"169","messageId":"170","endLine":3,"endColumn":38},{"ruleId":"167","severity":1,"message":"193","line":3,"column":75,"nodeType":"169","messageId":"170","endLine":3,"endColumn":81},{"ruleId":"194","severity":1,"message":"195","line":14,"column":71,"nodeType":"196","endLine":14,"endColumn":92},{"ruleId":"167","severity":1,"message":"197","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":27},{"ruleId":"167","severity":1,"message":"198","line":1,"column":29,"nodeType":"169","messageId":"170","endLine":1,"endColumn":38},{"ruleId":"167","severity":1,"message":"168","line":1,"column":48,"nodeType":"169","messageId":"170","endLine":1,"endColumn":56},{"ruleId":"167","severity":1,"message":"199","line":3,"column":22,"nodeType":"169","messageId":"170","endLine":3,"endColumn":31},{"ruleId":"167","severity":1,"message":"200","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":17},{"ruleId":"167","severity":1,"message":"201","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"202","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":21},{"ruleId":"167","severity":1,"message":"203","line":13,"column":11,"nodeType":"169","messageId":"170","endLine":13,"endColumn":19},{"ruleId":"167","severity":1,"message":"204","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":14},{"ruleId":"167","severity":1,"message":"205","line":10,"column":11,"nodeType":"169","messageId":"170","endLine":10,"endColumn":25},{"ruleId":"171","replacedBy":"206"},{"ruleId":"173","replacedBy":"207"},{"ruleId":"167","severity":1,"message":"208","line":1,"column":49,"nodeType":"169","messageId":"170","endLine":1,"endColumn":57},{"ruleId":"167","severity":1,"message":"191","line":1,"column":59,"nodeType":"169","messageId":"170","endLine":1,"endColumn":67},{"ruleId":"167","severity":1,"message":"181","line":9,"column":11,"nodeType":"169","messageId":"170","endLine":9,"endColumn":16},{"ruleId":"167","severity":1,"message":"184","line":23,"column":10,"nodeType":"169","messageId":"170","endLine":23,"endColumn":19},{"ruleId":"186","severity":1,"message":"209","line":36,"column":6,"nodeType":"188","endLine":36,"endColumn":8,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":67,"column":7,"nodeType":"213","messageId":"214","endLine":71,"endColumn":8},{"ruleId":"167","severity":1,"message":"190","line":2,"column":16,"nodeType":"169","messageId":"170","endLine":2,"endColumn":23},{"ruleId":"167","severity":1,"message":"200","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":17},{"ruleId":"167","severity":1,"message":"215","line":16,"column":28,"nodeType":"169","messageId":"170","endLine":16,"endColumn":39},{"ruleId":"167","severity":1,"message":"216","line":17,"column":11,"nodeType":"169","messageId":"170","endLine":17,"endColumn":23},{"ruleId":"186","severity":1,"message":"217","line":39,"column":6,"nodeType":"188","endLine":39,"endColumn":8,"suggestions":"218"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":29,"nodeType":"169","messageId":"170","endLine":1,"endColumn":37},{"ruleId":"167","severity":1,"message":"198","line":1,"column":39,"nodeType":"169","messageId":"170","endLine":1,"endColumn":48},{"ruleId":"167","severity":1,"message":"219","line":3,"column":18,"nodeType":"169","messageId":"170","endLine":3,"endColumn":22},{"ruleId":"167","severity":1,"message":"220","line":3,"column":24,"nodeType":"169","messageId":"170","endLine":3,"endColumn":36},{"ruleId":"167","severity":1,"message":"221","line":3,"column":55,"nodeType":"169","messageId":"170","endLine":3,"endColumn":60},{"ruleId":"167","severity":1,"message":"222","line":3,"column":62,"nodeType":"169","messageId":"170","endLine":3,"endColumn":67},{"ruleId":"167","severity":1,"message":"208","line":3,"column":69,"nodeType":"169","messageId":"170","endLine":3,"endColumn":77},{"ruleId":"167","severity":1,"message":"201","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"223","line":11,"column":13,"nodeType":"169","messageId":"170","endLine":11,"endColumn":18},{"ruleId":"167","severity":1,"message":"215","line":11,"column":30,"nodeType":"169","messageId":"170","endLine":11,"endColumn":41},{"ruleId":"167","severity":1,"message":"224","line":12,"column":11,"nodeType":"169","messageId":"170","endLine":12,"endColumn":18},{"ruleId":"167","severity":1,"message":"225","line":13,"column":13,"nodeType":"169","messageId":"170","endLine":13,"endColumn":18},{"ruleId":"167","severity":1,"message":"208","line":1,"column":49,"nodeType":"169","messageId":"170","endLine":1,"endColumn":57},{"ruleId":"167","severity":1,"message":"191","line":1,"column":59,"nodeType":"169","messageId":"170","endLine":1,"endColumn":67},{"ruleId":"167","severity":1,"message":"226","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"223","line":12,"column":13,"nodeType":"169","messageId":"170","endLine":12,"endColumn":18},{"ruleId":"167","severity":1,"message":"215","line":12,"column":30,"nodeType":"169","messageId":"170","endLine":12,"endColumn":41},{"ruleId":"167","severity":1,"message":"227","line":12,"column":55,"nodeType":"169","messageId":"170","endLine":12,"endColumn":65},{"ruleId":"167","severity":1,"message":"228","line":13,"column":25,"nodeType":"169","messageId":"170","endLine":13,"endColumn":32},{"ruleId":"167","severity":1,"message":"229","line":13,"column":34,"nodeType":"169","messageId":"170","endLine":13,"endColumn":38},{"ruleId":"167","severity":1,"message":"181","line":14,"column":13,"nodeType":"169","messageId":"170","endLine":14,"endColumn":18},{"ruleId":"167","severity":1,"message":"216","line":14,"column":20,"nodeType":"169","messageId":"170","endLine":14,"endColumn":32},{"ruleId":"167","severity":1,"message":"230","line":17,"column":12,"nodeType":"169","messageId":"170","endLine":17,"endColumn":25},{"ruleId":"167","severity":1,"message":"231","line":17,"column":27,"nodeType":"169","messageId":"170","endLine":17,"endColumn":43},{"ruleId":"167","severity":1,"message":"232","line":18,"column":11,"nodeType":"169","messageId":"170","endLine":18,"endColumn":22},{"ruleId":"167","severity":1,"message":"184","line":34,"column":12,"nodeType":"169","messageId":"170","endLine":34,"endColumn":21},{"ruleId":"186","severity":1,"message":"233","line":61,"column":8,"nodeType":"188","endLine":61,"endColumn":10,"suggestions":"234"},{"ruleId":"167","severity":1,"message":"235","line":77,"column":11,"nodeType":"169","messageId":"170","endLine":77,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":80,"column":30,"nodeType":"238","messageId":"239","endLine":80,"endColumn":53},{"ruleId":"167","severity":1,"message":"168","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"199","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":47},{"ruleId":"167","severity":1,"message":"240","line":1,"column":59,"nodeType":"169","messageId":"170","endLine":1,"endColumn":69},{"ruleId":"167","severity":1,"message":"200","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"201","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":20},{"ruleId":"186","severity":1,"message":"241","line":19,"column":6,"nodeType":"188","endLine":19,"endColumn":8,"suggestions":"242"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["243"],"no-negated-in-lhs",["244"],"'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'ChatContext' is defined but never used.","'getCatsById' is assigned a value but never used.","'users' is assigned a value but never used.","'getUsers' is assigned a value but never used.","'catZip' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cats', 'currentUser', 'getCats', and 'getUsersById'. Either include them or remove the dependency array.","ArrayExpression",["245"],"'CardImg' is defined but never used.","'CardText' is defined but never used.","'img' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'CatCard' is defined but never used.","'CatContext' is defined but never used.","'UserContext' is defined but never used.","'password' is assigned a value but never used.","'Home' is defined but never used.","'verifyPassword' is assigned a value but never used.",["243"],["244"],"'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'getCatById', 'getCats', and 'getUsers'. Either include them or remove the dependency array.",["246"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'getChatById' is assigned a value but never used.","'getUsersById' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cat', 'catId', 'chats', 'getCatById', and 'getChats'. Either include them or remove the dependency array.",["247"],"'Form' is defined but never used.","'CardSubtitle' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'chats' is assigned a value but never used.","'history' is assigned a value but never used.","'catId' is assigned a value but never used.","'ChatCard' is defined but never used.","'updateChat' is assigned a value but never used.","'getCats' is assigned a value but never used.","'cats' is assigned a value but never used.","'filteredChats' is assigned a value but never used.","'setFilteredChats' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatId', 'getCatById', and 'getChats'. Either include them or remove the dependency array.",["248"],"'handleRelease' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getChats'. Either include it or remove the dependency array.",["249"],"no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [cats, currentUser, getCats, getUsersById]",{"range":"260","text":"261"},"Update the dependencies array to be: [getCatById, getCats, getUsers]",{"range":"262","text":"263"},"Update the dependencies array to be: [cat, catId, chats, getCatById, getChats]",{"range":"264","text":"265"},"Update the dependencies array to be: [chatId, getCatById, getChats]",{"range":"266","text":"267"},"Update the dependencies array to be: [getChats]",{"range":"268","text":"269"},[1948,1950],"[cats, currentUser, getCats, getUsersById]",[1233,1235],"[getCatById, getCats, getUsers]",[1358,1360],"[cat, catId, chats, getCatById, getChats]",[1972,1974],"[chatId, getCatById, getChats]",[528,530],"[getChats]"]
