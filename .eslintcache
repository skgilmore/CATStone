[{"C:\\Users\\Stephanie\\workspace\\capstone\\src\\index.js":"1","C:\\Users\\Stephanie\\workspace\\capstone\\src\\reportWebVitals.js":"2","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\PropsAndState.js":"3","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsProvider.js":"4","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsList.js":"5","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatCard.js":"6","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Capstone.js":"7","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Login.js":"8","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\ApplicationViews.js":"9","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Register.js":"10","C:\\Users\\Stephanie\\workspace\\capstone\\src\\Home.js":"11","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatForm.js":"12","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatDetails.js":"13","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Users\\UsersProvider.js":"14","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatProvider.js":"15","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatCard.js":"16","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatForm.js":"17","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatDetails.js":"18","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\Chart.js":"19"},{"size":408,"mtime":1613068453474,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1611956400733,"results":"22","hashOfConfig":"21"},{"size":166,"mtime":1612983511871,"results":"23","hashOfConfig":"21"},{"size":2210,"mtime":1612983511867,"results":"24","hashOfConfig":"21"},{"size":3118,"mtime":1613068453468,"results":"25","hashOfConfig":"21"},{"size":2233,"mtime":1613074699270,"results":"26","hashOfConfig":"21"},{"size":684,"mtime":1613072800338,"results":"27","hashOfConfig":"21"},{"size":2422,"mtime":1612983511877,"results":"28","hashOfConfig":"21"},{"size":1307,"mtime":1613080282687,"results":"29","hashOfConfig":"21"},{"size":3529,"mtime":1612296200994,"results":"30","hashOfConfig":"21"},{"size":276,"mtime":1612192261847,"results":"31","hashOfConfig":"21"},{"size":6293,"mtime":1613072800339,"results":"32","hashOfConfig":"21"},{"size":3720,"mtime":1613000250860,"results":"33","hashOfConfig":"21"},{"size":1304,"mtime":1612983511873,"results":"34","hashOfConfig":"21"},{"size":1667,"mtime":1612676527357,"results":"35","hashOfConfig":"21"},{"size":1665,"mtime":1613000250858,"results":"36","hashOfConfig":"21"},{"size":3984,"mtime":1612983511862,"results":"37","hashOfConfig":"21"},{"size":1407,"mtime":1612983511862,"results":"38","hashOfConfig":"21"},{"size":1899,"mtime":1613084532765,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1akukpu",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":3,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Stephanie\\workspace\\capstone\\src\\index.js",[],["90","91"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\reportWebVitals.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\PropsAndState.js",["92"],"import React, { useState } from \"react\"\r\n\r\nexport const PropsAndState = ({ yourName }) => {\r\n \r\n\r\n  return (\r\n    <>\r\n      <h3>Welcome, {yourName} </h3>\r\n    </>\r\n  )\r\n}",["93","94"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsList.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { CatCard } from \"./CatCard\"\r\nimport { CatContext } from \"./CatsProvider\"\r\nimport { Button, Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { UserContext } from \"../Users/UsersProvider\";\r\nimport { ChatContext } from \"../CatChat/ChatProvider\";\r\nimport \"./Cats.css\"\r\n\r\nexport const CatList = () => {\r\n    /* -------------------- To have access to cats -------------------- */\r\n    const { getCats, getCatsById } = useContext(CatContext)\r\n    const { users, getUsers, getUsersById } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const { catZip } = useParams();\r\n\r\n    /* -------------------- Use use State to update the state of cats as it is changed -------------------- */\r\n\r\n    const [filteredCats, setFilteredCats] = useState([])\r\n\r\n    /* -------------------- To have access to the filter, filter cats by their zip codes, reset state and rerender page-------------------- */\r\n\r\n\r\n    /* -------------------- Compare logged in user Id to known user Id to map matching items------------------- */\r\n    const currentUser = (localStorage.getItem(\"capstone_customer\"))\r\n    const [cats, setCats] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    /* -------------------- Get all cats. Get user based on current user. Filter all cats whose zip macth users zip -------------------- */\r\n    /* -------------------- Reset the state of the page to show only cats with matching zip codes of the user -------------------- */\r\n    useEffect(() => {\r\n        getCats()\r\n            .then((cats) => {\r\n                setCats(cats)\r\n                getUsersById(currentUser)\r\n                    .then((user) => {\r\n                        console.log(\"cats\", cats)\r\n                        const filteredCatByZip = cats.filter(cat => cat.zip === user.zip)\r\n                        setFilteredCats(filteredCatByZip)\r\n                    })\r\n            })\r\n    }, [])\r\n    const handleLogOutBtn = () => {\r\n        history.push(``)\r\n        localStorage.clear()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"bg-info clearfix\" style={{ padding: '.5rem' }}>\r\n                <button onClick={handleLogOutBtn} className=\"btn btn-secondary float-right\">Log Out</button>\r\n            </div>\r\n            <h2>Cats</h2>\r\n            {!filteredCats.length>0 ?   <h3>There are no strays listed in your area...check out the add a cat button</h3> : \r\n            \r\n                filteredCats.map(cat => {\r\n                    /* -------------------- Map over the returned cats and display their info as assigned in CatCard Comp------------------- */\r\n                    return <CatCard key={cat.id} cat={cat} zip={cat.zip} />\r\n                })\r\n            }\r\n\r\n            <div className=\"bg-info clearfix\" style={{ padding: '.5rem' }}>\r\n            <button onClick={() => { history.push(\"/cats/create\") }}className=\"btn btn-secondary float-middle\">Add A Cat</button>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatCard.js",["109","110","111","112","113","114","115"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Capstone.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Login.js",["116","117","118","119","120","121","122","123"],"import React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { CatCard } from \"../Cats/CatCard\";\r\nimport { CatContext } from \"../Cats/CatsProvider\";\r\nimport { UserContext } from \"../Users/UsersProvider\";\r\nimport \"./Login.css\"\r\n\r\n\r\n\r\nexport const Login = props => {\r\n    const email = useRef()\r\n    const password = useRef()\r\n    const existDialog = useRef()\r\n    const history = useHistory()\r\n \r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => user.length ? user[0] : false)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then(exists => {\r\n                if (exists) {\r\n                    localStorage.setItem(\"capstone_customer\", exists.id)\r\n\r\n                    history.push(\"/cats\")\r\n                } else {\r\n                    existDialog.current.showModal()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main className=\"container--login\">\r\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\r\n                <div>User does not exist</div>\r\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <section>\r\n                <form className=\"form--login\" onSubmit={handleLogin}>\r\n                    <h1>Mew Girl</h1>\r\n                    <h2>Please sign in</h2>\r\n                    <fieldset>\r\n                        <label htmlFor=\"inputEmail\"> Email address </label>\r\n                        <input ref={email} type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            required autoFocus />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button type=\"submit\">\r\n                            Sign in\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n            <section className=\"link--register\">\r\n                <Link to=\"/register\">Not a member yet?</Link>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Register.js",["124"],"import React, { useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\nexport const Register = (props) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const zip = useRef()\r\n    const verifyPassword = useRef()\r\n    const conflictDialog = useRef()\r\n    const history = useHistory()\r\n    \r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n        .then(res => res.json())\r\n        .then(user => !!user.length)\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        \r\n        \r\n        existingUserCheck()\r\n        .then((userExists) => {\r\n            if (!userExists) {\r\n                fetch(\"http://localhost:8088/users\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email.current.value,\r\n                        name: `${firstName.current.value} ${lastName.current.value}`,\r\n                        zip: parseInt(zip.current.value)\r\n                        \r\n                    })\r\n                })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                localStorage.setItem(\"capstone_customer\", createdUser.id)\r\n                                history.push(\"/cats\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Mew Girl</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputZip\"> Zip Code </label>\r\n                    <input ref={zip} type=\"zip\" name=\"zip\" className=\"form-control\" placeholder=\"Zip Code\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\Home.js",[],["125","126"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatForm.js",["127","128","129","130","131","132"],"import { Button, Form, FormGroup, Label, Input, FormText, CardText } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { CatContext } from './CatsProvider';\r\nimport { UserContext } from '../Users/UsersProvider';\r\nexport const CatForm = () => {\r\n  const { addCat, getCatById, getCats, updateCat } = useContext(CatContext)\r\n  const { users, getUsers } = useContext(UserContext)\r\n\r\n  // const [isLoading, setIsLoading]= useState(true);\r\n  const [pic, setPic]= useState(\"\")\r\n  /* -------------------- ASSIGN PROPS TO A CAT AND HOLD STATE OF CAT IN CURRENT VIEW -------------------- */\r\n  const [cat, setCat] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    userId: null,\r\n    zip: 0,\r\n    color: \"\",\r\n    pic: \"\",\r\n    // imageURL: \"\"\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const uploadImage = async e =>{\r\n    const files = e.target.files\r\n    const data = new FormData()\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\",\"catstone\")\r\n    setLoading (true)\r\n    const response = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/deaoaorkg/image/upload\",\r\n      {\r\n        method:\"Post\",\r\n        body: data,\r\n      }\r\n    )\r\n    const file = await response.json()\r\n    setPic(file.secure_url)\r\n    setLoading(false)\r\n  }\r\n  /* --------------WAIT FOR DATA BEFORE BTN IS ACTIVE -------------------- */\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  /* -------------------- ACCESS THE ID OF A CAT SO THAT YOU CAN FETCH THE ONE YOU WANT TO EDIT-------------------- */\r\n\r\n  const { catId } = useParams();\r\n  const history = useHistory();\r\n\r\n  /* -------------------GET USERS. IF CATID IN URL, GET CAT BY CATID -------------------- */\r\n\r\n  useEffect(() => {\r\n    getUsers().then(getCats)\r\n    console.log(getCatById, \"all cats?\")\r\n  }, [])\r\n  /* -------------------- GET LOCAL STORAGE ID, PARSE INT IN PROPS AND ADD VALUE OF NEW PROPS WITH DOT NOTATION-------------------- */\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newCat = { ...cat }\r\n    newCat[event.target.id] = event.target.value\r\n    const currentUser = localStorage.getItem(\"capstone_customer\")\r\n    console.log(currentUser, \"user\")\r\n    if (event.target.name.includes(\"adopted\")) {\r\n      newCat.userId = currentUser\r\n    }\r\n    else {\r\n      event.target.value = null\r\n    }\r\n    setCat(newCat)\r\n  }\r\n  const handleAddCat = (event) => {\r\n    if (parseInt(cat.zip) === 0 || (cat.color === \"\")) {\r\n      window.alert(\"Please fill out all areas\")\r\n    }\r\n    else {\r\n      setIsLoading(true);\r\n      if (catId) {\r\n        //PUT - update\r\n        updateCat({\r\n          id: cat.id,\r\n          name: cat.name,\r\n          color: cat.color,\r\n          zip: parseInt(cat.zip),\r\n          userId: parseInt(cat.userId),\r\n          pic: cat.pic\r\n        })\r\n          .then(() => history.push(`/cats/detail/${cat.id}`))\r\n      } else {\r\n        //POST - add\r\n        addCat({\r\n          id: cat.id,\r\n          name: cat.name,\r\n          color: cat.color,\r\n          zip: parseInt(cat.zip),\r\n          userId: parseInt(cat.userId),\r\n          pic: pic\r\n        })\r\n          .then(() => history.push(\"/cats\"))\r\n      }\r\n    }\r\n  }\r\n  /* -------------------- ALLOW USERS TO ADD A CAT AND DESIGNATE PROPS USING FORM -------------------- */\r\n  return (\r\n    <>\r\n<Form>\r\n\r\n    <div className=\"image\">\r\n    <div>Upload Image</div>\r\n    <input type=\"file\" name=\"file\" placeholder=\"Upload an image\" onChange={uploadImage}/>\r\n    {loading ? (\r\n        <h3>Loading...</h3>\r\n    ) : (\r\n            <img src={pic} style={{ width: \"100px\" }} />\r\n        )}\r\n</div>\r\n\r\n\r\n      <FormGroup>\r\n        <Label for=\"newCatName\">Name</Label>\r\n        <Input type=\"text\" name=\"catName\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Name of Furry Friend\" value={cat.name} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"zip\">Zip Code</Label>\r\n        <Input type=\"text\" name=\"zip\" id=\"zip\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Zip Code of Cat\" value={cat.zip} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"color\">Description</Label>\r\n        <Input type=\"select\" name=\"color\" id=\"color\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\" Color of Cat\" value={cat.color}  >\r\n          <option value=\"0\" >Please Select a Color</option>\r\n          <option >Orange</option>\r\n          <option>Yellow</option>\r\n          <option>Gray</option>\r\n          <option>Black</option>\r\n          <option>White</option>\r\n          <option>Brown</option>\r\n          <option>Calico</option>\r\n          <option>Striped</option>\r\n        </Input>\r\n      </FormGroup>\r\n      {/* <FormGroup className=“image”>\r\n                <div>Upload Image</div>\r\n                <input type=“file” name=“file” placeholder=“Upload an image” onChange={uploadImage}/>\r\n                {loading ? (\r\n                    <h3>Loading...</h3>\r\n                ) : (\r\n                        <img src={imageURL} style={{ width: “100px” }} />\r\n                    )}\r\n            </FormGroup> */}\r\n      <FormGroup tag=\"fieldset\">\r\n        <legend>Radio Buttons</legend>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"radio\" name=\"adopted\" id=\"userId\" onChange={handleControlledInputChange} value={cat.userId} />{' '}\r\n            Do you take this cat to be yours for better or worse as long as you both shall live...in this neighborhood?\r\n            </Label>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"radio\" name=\"not\" id=\"userId\" onChange={handleControlledInputChange} value={cat.userId} />{' '}\r\n            This furry friend is in need of a home\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup check disabled>\r\n        </FormGroup>         I sure hope it finds one...\r\n      </FormGroup>\r\n      <div>\r\n        <Button\r\n          className=\"btn btn-primary\"\r\n          onClick={event => {\r\n            handleAddCat()\r\n          }}>{catId ? \"Save Cat\" : \"Add Cat\"}</Button>\r\n      </div>\r\n    </Form>\r\n  </>);\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatDetails.js",["133","134","135","136","137","138"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button,Label,Input, Row } from 'reactstrap';\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { CatContext } from \"./CatsProvider\"\r\nimport Black from '../images/Black.png'\r\nimport \"./Cats.css\"\r\nimport { ChatContext } from \"../CatChat/ChatProvider\";\r\nimport { ChatCard } from \"../CatChat/ChatCard\";\r\nimport { UserContext } from \"../Users/UsersProvider\";\r\nimport { CatCard } from \"./CatCard\"\r\n\r\nexport const CatDetail = () => {\r\n  const { getCatById, deleteCat, updateCat } = useContext(CatContext)\r\n  const { chats, getChats, getChatById } = useContext(ChatContext)\r\n  const { getUsersById } = useContext(UserContext)\r\n  const [filteredChats, setFilteredChats] = useState([])\r\n  const [cat, setCat] = useState({})\r\n  const { catId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n  //-------------------- FIND THE CATS TO DISPLAY BASED ON CAT ID (I.E. RELATED CHATS) ------------\r\n\r\n  useEffect(() => {\r\n    getCatById(catId)\r\n      .then((response) => {\r\n        getChats()\r\n        setCat(response)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(()  => {\r\n    const filteredChatsByCat = chats.filter(chat => chat.catId === cat.id)\r\n    setFilteredChats(filteredChatsByCat)\r\n\r\n  }, [chats])\r\n\r\n  if (cat.pic === \"\") {\r\n    let defaultCatPic = Black\r\n    cat.pic = defaultCatPic\r\n  }\r\n  //-----------------HANDLE DELETE --------------------\r\n\r\n  const history = useHistory();\r\n  const handleRelease = () => {\r\n    deleteCat(cat.id)\r\n      .then(() => {\r\n        history.push(\"/cats\")\r\n      })\r\n  }\r\n  const currentUser = localStorage.getItem(\"capstone_customer\")\r\n  const handleControlledInputChange = (event) => {\r\n    if (event.target.name.includes(\"adopted\")) {\r\n    \r\n      setIsLoading(true);\r\n      if (catId){\r\n      //PUT - update\r\n      updateCat({\r\n        id: cat.id,\r\n          name: cat.name,\r\n          color: cat.color,\r\n          zip: parseInt(cat.zip),\r\n          userId: parseInt(currentUser),\r\n          pic: cat.pic        \r\n      })\r\n      .then(() => history.push(\"/cats\"))\r\n    }\r\n  }\r\n    else {\r\n      event.target.value = null\r\n    }\r\n    \r\n  }\r\n\r\n  //-------------------- DOM VIEW OF CAT DETAILS------------\r\n  return (\r\n    <section className=\"wholecatdetails\">\r\n      {/* <Row xs=\"2\"> */}\r\n      <div className=\"catStuff\">\r\n      <Card>\r\n        <CardTitle tag=\"h5\" className=\"cat__name\">{cat.name}</CardTitle>\r\n        {/* <CardImg top width=\"100%\" src={images.blackCat.jpg}> </CardImg> */}\r\n        <CardBody>\r\n          <CardImg top width=\"10%\" src={cat.pic} className=\"catPic\"></CardImg>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location: {cat.zip}</CardSubtitle>\r\n          {/* <div className=\"cat__zip\"></div> */}\r\n          <CardText className=\"cat__color\">Color of Cat: {cat?.color}</CardText>\r\n          {!cat.userId ? <Label check>\r\n         <Input type=\"radio\" name=\"adopted\" id=\"userId\" onChange={handleControlledInputChange} value={cat.userId} />{' '}\r\n            Being a stray is a CATastrophe!\r\n            <br></br>\r\n            Will you adopt me?\r\n            </Label> : \"\"}\r\n            <Button size=\"sm\"\r\n              className=\"btn btn-primary\"\r\n              onClick={handleRelease}>Delete Cat</Button>\r\n        </CardBody>\r\n      </Card>\r\n              </div>\r\n            <div className=\"chatStuff\">\r\n            {filteredChats.length > 0 ?   filteredChats.map(chat => { return <ChatCard key={chat.id} chat={chat} /> }) : \"no chats\"}\r\n      {console.log(filteredChats,\"chatcheck\")}\r\n      {/* </Row> */}\r\n      </div>\r\n      {/* </Row> */}\r\n    </section>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Users\\UsersProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatCard.js",["139","140","141","142","143","144"],"import React, { useContext, useState, useEffect } from \"react\"\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { CardTitle, Card, CardText, Button } from 'reactstrap';\r\nimport { ChatContext } from \"./ChatProvider\";\r\n// import { CatContext } from \"../Cats/CatsProvider\";\r\n\r\n\r\n/* -------------------- The displayed content of a cHat-------------------- */\r\n\r\nexport const ChatCard = ({ chat, cat }) => {\r\n    const { chats, getChats, getChatById, deleteChat } = useContext(ChatContext)\r\n    const history = useHistory()\r\n    const { catId } = useParams();\r\n\r\n    const handleRelease = (event) => {\r\n        deleteChat(chat.id)\r\n            .then(getChats)\r\n        // .then(window.location.reload())\r\n\r\n    }\r\n    if (chat.userId === parseInt(localStorage.getItem(\"capstone_customer\"))) {\r\n        return (\r\n\r\n            <div>\r\n                <Card body inverse color=\"info\">\r\n                    <CardTitle tag=\"h5\">Note:</CardTitle>\r\n                    <CardText>{chat.note}</CardText>\r\n                    <Button size=\"sm\" color=\"secondary\" onClick={handleRelease}>Delete Chat</Button>\r\n                    {/* <Button onClick={() => { history.push(`/cats/detail/${catId}`)  }}>Edit</Button>  */}\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <Card body inverse color=\"info\">\r\n                    <CardTitle tag=\"h5\">Note:</CardTitle>\r\n                    <CardText>{chat.note}</CardText>\r\n                </Card>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatForm.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import { Button, Form, FormGroup, Label, Input, FormText, CardText } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { CatContext } from '../Cats/CatsProvider';\r\nimport { UserContext } from '../Users/UsersProvider';\r\nimport { ChatContext } from './ChatProvider';\r\nimport { ChatCard } from './ChatCard';\r\n\r\n\r\n\r\nexport const ChatForm = () => {\r\n    const { chats, getChats, getChatById, deleteChat, updateChat, addChat } = useContext(ChatContext)\r\n    const { getCatById, getCats, cats } = useContext(CatContext)\r\n    const { users, getUsersById } = useContext(UserContext)\r\n\r\n\r\n    const [filteredChats, setFilteredChats] = useState([])\r\n    const currentUser = (localStorage.getItem(\"capstone_customer\"))\r\n    // *I want to get all of the notes with a matching cat id\r\n    // be able to add/ edit/ delete a specif note\r\n\r\n    /* -------------------- ASSIGN PROPS TO A CHAT AND HOLD STATE OF CHAT IN CURRENT VIEW -------------------- */\r\n\r\n\r\n    const [chat, setChat] = useState({\r\n        note: \"\",\r\n        catId: 0,\r\n        userId: 0\r\n    })\r\n    /* --------------WAIT FOR DATA BEFORE BTN IS ACTIVE -------------------- */\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    /* -------------------- ACCESS THE ID OF A CHAT SO THAT YOU CAN FETCH THE ONE YOU WANT TO EDIT-------------------- */\r\n\r\n    const { catId } = useParams();\r\n    const { chatId } = useParams\r\n    const history = useHistory();\r\n\r\n    /* -------------------GET CATS BY ID W/ PARAMS, THEN GET CHATS-------------------- */\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        getCatById(catId)\r\n        if (chatId) {\r\n\r\n            getChats()\r\n                .then(chat => {\r\n                    setChat(chat)\r\n                    setIsLoading(false)\r\n                    setFilteredChats(chat)\r\n                })\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    /* -------------------CHECK CURRENT USER AND SET NEW PROPS W/ DOT NOTATION -------------------- */\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newChat = { ...chat }\r\n        newChat[event.target.id] = event.target.value\r\n        const currentUser = localStorage.getItem(\"capstone_customer\")\r\n        newChat.userId = currentUser\r\n        console.log(newChat, \"chat adds?\")\r\n        setChat(newChat)\r\n    }\r\n\r\n    const handleAddChat = (event) => {\r\n        if (chatId) {\r\n            // PUT - update\r\n            // updateChat({\r\n            //     id: chat.id,\r\n            //     note: chat.note,\r\n            //     catId: parseInt(cats.id),\r\n            //     userId: parseInt(chat.userId)\r\n            // })\r\n            //     .then(() => history.push(`/cats/detail/${catId}`))\r\n        } else {\r\n            //POST - add\r\n            addChat({\r\n                id: chat.id,\r\n                note: chat.note,\r\n                catId: parseInt(catId),\r\n                userId: parseInt(chat.userId)\r\n\r\n            })\r\n                .then(() => history.push(`/cats/detail/${catId}`))\r\n                .then(window.location.reload())\r\n        }\r\n\r\n    }\r\n \r\n    \r\n \r\n    /* -------------------- ALLOW USERS TO ADD A CHAT AND DESIGNATE PROPS USING FORM -------------------- */\r\n    return (\r\n        <Form>\r\n            <h2>Cat Chat</h2>\r\n            <div className=\"chat\"></div>\r\n            <FormGroup>\r\n                <Label for=\"newChat\"></Label>\r\n                <Input type=\"type\" name=\"chat\" id=\"note\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                    placeholder=\"Chat\" value={chat.note}\r\n                // onInput= {e => handleFieldChange (e)}\r\n                />\r\n            </FormGroup>\r\n\r\n            <div>\r\n                <div className=\"refreshChat\">\r\n                    {\r\n                        filteredChats.map(chat => {\r\n                            // take the list of filteredCats you used in use state and give me their info\r\n                            return <ChatCard key={chat.id} note={chat.note} />\r\n                        })\r\n\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <Button color=\"success\" type=\"reset\"\r\n                    onClick={event => {\r\n                        handleAddChat()\r\n\r\n                    }}>\r\n                    {chatId ? \"Save Chat\" : \"Add Chat\"}</Button>\r\n            </div>\r\n\r\n        </Form>\r\n    );\r\n}\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatDetails.js",["162","163","164","165","166","167","168","169","170","171"],"import React, { useContext,useState, useParams,useEffect, useHistory } from \"react\"\r\nimport { CatCard } from \"../Cats/CatCard\"\r\nimport { CatContext } from \"../Cats/CatsProvider\"\r\nimport { ChatCard } from \"./ChatCard\"\r\nimport { ChatContext } from \"./ChatProvider\"\r\n\r\n\r\nexport const ChatList = () => {\r\n  const { chats, getChats} = useContext(ChatContext)\r\n\r\n    //-------------------- CHAT INFO TO BE DISPLAYED ON THE DOM ------------\r\n\r\n\r\n useEffect(() => {\r\n    console.log(\"CHAT DETAILS RENDER\")\r\n    getChats()\r\n    \r\n\r\n  }, [])\r\n  return (\r\n    <div className=\"chats\">\r\n      {console.log(\"ChatList: Render\", chats)}\r\n      {\r\n        chats.map(chat => {\r\n          return <ChatCard key={chat.id} chat={chat} />\r\n        })\r\n      }\r\n      <div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\Chart.js",["172","173","174","175","176","177","178","179","180","181","182","183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"184","replacedBy":"192"},{"ruleId":"186","replacedBy":"193"},{"ruleId":"188","severity":1,"message":"194","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":16},{"ruleId":"188","severity":1,"message":"195","line":5,"column":18,"nodeType":"190","messageId":"191","endLine":5,"endColumn":26},{"ruleId":"188","severity":1,"message":"196","line":5,"column":28,"nodeType":"190","messageId":"191","endLine":5,"endColumn":40},{"ruleId":"188","severity":1,"message":"197","line":5,"column":42,"nodeType":"190","messageId":"191","endLine":5,"endColumn":56},{"ruleId":"188","severity":1,"message":"198","line":5,"column":58,"nodeType":"190","messageId":"191","endLine":5,"endColumn":70},{"ruleId":"188","severity":1,"message":"199","line":7,"column":10,"nodeType":"190","messageId":"191","endLine":7,"endColumn":21},{"ruleId":"188","severity":1,"message":"200","line":12,"column":22,"nodeType":"190","messageId":"191","endLine":12,"endColumn":33},{"ruleId":"188","severity":1,"message":"201","line":13,"column":13,"nodeType":"190","messageId":"191","endLine":13,"endColumn":18},{"ruleId":"188","severity":1,"message":"202","line":13,"column":20,"nodeType":"190","messageId":"191","endLine":13,"endColumn":28},{"ruleId":"188","severity":1,"message":"203","line":15,"column":13,"nodeType":"190","messageId":"191","endLine":15,"endColumn":19},{"ruleId":"188","severity":1,"message":"204","line":26,"column":12,"nodeType":"190","messageId":"191","endLine":26,"endColumn":16},{"ruleId":"188","severity":1,"message":"205","line":27,"column":12,"nodeType":"190","messageId":"191","endLine":27,"endColumn":21},{"ruleId":"188","severity":1,"message":"206","line":27,"column":23,"nodeType":"190","messageId":"191","endLine":27,"endColumn":35},{"ruleId":"207","severity":1,"message":"208","line":42,"column":8,"nodeType":"209","endLine":42,"endColumn":10,"suggestions":"210"},{"ruleId":"188","severity":1,"message":"211","line":5,"column":25,"nodeType":"190","messageId":"191","endLine":5,"endColumn":33},{"ruleId":"188","severity":1,"message":"212","line":5,"column":35,"nodeType":"190","messageId":"191","endLine":5,"endColumn":38},{"ruleId":"188","severity":1,"message":"213","line":5,"column":40,"nodeType":"190","messageId":"191","endLine":5,"endColumn":43},{"ruleId":"188","severity":1,"message":"194","line":5,"column":85,"nodeType":"190","messageId":"191","endLine":5,"endColumn":91},{"ruleId":"188","severity":1,"message":"214","line":5,"column":100,"nodeType":"190","messageId":"191","endLine":5,"endColumn":108},{"ruleId":"215","severity":1,"message":"216","line":23,"column":76,"nodeType":"217","endLine":23,"endColumn":97},{"ruleId":"215","severity":1,"message":"216","line":46,"column":76,"nodeType":"217","endLine":46,"endColumn":97},{"ruleId":"188","severity":1,"message":"218","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":27},{"ruleId":"188","severity":1,"message":"219","line":1,"column":29,"nodeType":"190","messageId":"191","endLine":1,"endColumn":38},{"ruleId":"188","severity":1,"message":"189","line":1,"column":48,"nodeType":"190","messageId":"191","endLine":1,"endColumn":56},{"ruleId":"188","severity":1,"message":"220","line":3,"column":22,"nodeType":"190","messageId":"191","endLine":3,"endColumn":31},{"ruleId":"188","severity":1,"message":"221","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":17},{"ruleId":"188","severity":1,"message":"222","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":20},{"ruleId":"188","severity":1,"message":"223","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":21},{"ruleId":"188","severity":1,"message":"224","line":11,"column":11,"nodeType":"190","messageId":"191","endLine":11,"endColumn":19},{"ruleId":"188","severity":1,"message":"225","line":10,"column":11,"nodeType":"190","messageId":"191","endLine":10,"endColumn":25},{"ruleId":"184","replacedBy":"226"},{"ruleId":"186","replacedBy":"227"},{"ruleId":"188","severity":1,"message":"228","line":1,"column":49,"nodeType":"190","messageId":"191","endLine":1,"endColumn":57},{"ruleId":"188","severity":1,"message":"211","line":1,"column":59,"nodeType":"190","messageId":"191","endLine":1,"endColumn":67},{"ruleId":"188","severity":1,"message":"201","line":8,"column":11,"nodeType":"190","messageId":"191","endLine":8,"endColumn":16},{"ruleId":"188","severity":1,"message":"205","line":43,"column":10,"nodeType":"190","messageId":"191","endLine":43,"endColumn":19},{"ruleId":"207","severity":1,"message":"229","line":55,"column":6,"nodeType":"209","endLine":55,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":113,"column":13,"nodeType":"233","endLine":113,"endColumn":57},{"ruleId":"188","severity":1,"message":"221","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":17},{"ruleId":"188","severity":1,"message":"234","line":14,"column":28,"nodeType":"190","messageId":"191","endLine":14,"endColumn":39},{"ruleId":"188","severity":1,"message":"235","line":15,"column":11,"nodeType":"190","messageId":"191","endLine":15,"endColumn":23},{"ruleId":"188","severity":1,"message":"205","line":19,"column":10,"nodeType":"190","messageId":"191","endLine":19,"endColumn":19},{"ruleId":"207","severity":1,"message":"236","line":34,"column":6,"nodeType":"209","endLine":34,"endColumn":8,"suggestions":"237"},{"ruleId":"207","severity":1,"message":"238","line":41,"column":6,"nodeType":"209","endLine":41,"endColumn":13,"suggestions":"239"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":29,"nodeType":"190","messageId":"191","endLine":1,"endColumn":37},{"ruleId":"188","severity":1,"message":"219","line":1,"column":39,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"240","line":11,"column":13,"nodeType":"190","messageId":"191","endLine":11,"endColumn":18},{"ruleId":"188","severity":1,"message":"234","line":11,"column":30,"nodeType":"190","messageId":"191","endLine":11,"endColumn":41},{"ruleId":"188","severity":1,"message":"241","line":12,"column":11,"nodeType":"190","messageId":"191","endLine":12,"endColumn":18},{"ruleId":"188","severity":1,"message":"242","line":13,"column":13,"nodeType":"190","messageId":"191","endLine":13,"endColumn":18},{"ruleId":"188","severity":1,"message":"228","line":1,"column":49,"nodeType":"190","messageId":"191","endLine":1,"endColumn":57},{"ruleId":"188","severity":1,"message":"211","line":1,"column":59,"nodeType":"190","messageId":"191","endLine":1,"endColumn":67},{"ruleId":"188","severity":1,"message":"243","line":3,"column":40,"nodeType":"190","messageId":"191","endLine":3,"endColumn":57},{"ruleId":"188","severity":1,"message":"240","line":12,"column":13,"nodeType":"190","messageId":"191","endLine":12,"endColumn":18},{"ruleId":"188","severity":1,"message":"234","line":12,"column":30,"nodeType":"190","messageId":"191","endLine":12,"endColumn":41},{"ruleId":"188","severity":1,"message":"244","line":12,"column":43,"nodeType":"190","messageId":"191","endLine":12,"endColumn":53},{"ruleId":"188","severity":1,"message":"245","line":12,"column":55,"nodeType":"190","messageId":"191","endLine":12,"endColumn":65},{"ruleId":"188","severity":1,"message":"246","line":13,"column":25,"nodeType":"190","messageId":"191","endLine":13,"endColumn":32},{"ruleId":"188","severity":1,"message":"204","line":13,"column":34,"nodeType":"190","messageId":"191","endLine":13,"endColumn":38},{"ruleId":"188","severity":1,"message":"201","line":14,"column":13,"nodeType":"190","messageId":"191","endLine":14,"endColumn":18},{"ruleId":"188","severity":1,"message":"235","line":14,"column":20,"nodeType":"190","messageId":"191","endLine":14,"endColumn":32},{"ruleId":"188","severity":1,"message":"247","line":16,"column":11,"nodeType":"190","messageId":"191","endLine":16,"endColumn":22},{"ruleId":"188","severity":1,"message":"248","line":26,"column":12,"nodeType":"190","messageId":"191","endLine":26,"endColumn":15},{"ruleId":"188","severity":1,"message":"205","line":29,"column":12,"nodeType":"190","messageId":"191","endLine":29,"endColumn":21},{"ruleId":"188","severity":1,"message":"241","line":35,"column":11,"nodeType":"190","messageId":"191","endLine":35,"endColumn":18},{"ruleId":"188","severity":1,"message":"249","line":36,"column":11,"nodeType":"190","messageId":"191","endLine":36,"endColumn":17},{"ruleId":"207","severity":1,"message":"250","line":51,"column":8,"nodeType":"209","endLine":51,"endColumn":10,"suggestions":"251"},{"ruleId":"188","severity":1,"message":"220","line":1,"column":38,"nodeType":"190","messageId":"191","endLine":1,"endColumn":47},{"ruleId":"188","severity":1,"message":"252","line":1,"column":59,"nodeType":"190","messageId":"191","endLine":1,"endColumn":69},{"ruleId":"188","severity":1,"message":"221","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"188","severity":1,"message":"253","line":9,"column":11,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"254","line":9,"column":23,"nodeType":"190","messageId":"191","endLine":9,"endColumn":32},{"ruleId":"188","severity":1,"message":"204","line":9,"column":43,"nodeType":"190","messageId":"191","endLine":9,"endColumn":47},{"ruleId":"188","severity":1,"message":"234","line":10,"column":28,"nodeType":"190","messageId":"191","endLine":10,"endColumn":39},{"ruleId":"188","severity":1,"message":"248","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":13},{"ruleId":"188","severity":1,"message":"255","line":15,"column":15,"nodeType":"190","messageId":"191","endLine":15,"endColumn":21},{"ruleId":"207","severity":1,"message":"256","line":25,"column":8,"nodeType":"209","endLine":25,"endColumn":10,"suggestions":"257"},{"ruleId":"188","severity":1,"message":"258","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":13},{"ruleId":"188","severity":1,"message":"259","line":2,"column":49,"nodeType":"190","messageId":"191","endLine":2,"endColumn":58},{"ruleId":"188","severity":1,"message":"260","line":5,"column":9,"nodeType":"190","messageId":"191","endLine":5,"endColumn":17},{"ruleId":"188","severity":1,"message":"246","line":9,"column":23,"nodeType":"190","messageId":"191","endLine":9,"endColumn":30},{"ruleId":"188","severity":1,"message":"261","line":13,"column":9,"nodeType":"190","messageId":"191","endLine":13,"endColumn":20},{"ruleId":"188","severity":1,"message":"262","line":14,"column":9,"nodeType":"190","messageId":"191","endLine":14,"endColumn":22},{"ruleId":"263","severity":2,"message":"264","line":18,"column":5,"nodeType":"190","endLine":18,"endColumn":14},{"ruleId":"207","severity":1,"message":"265","line":22,"column":10,"nodeType":"209","endLine":22,"endColumn":16,"suggestions":"266"},{"ruleId":"263","severity":2,"message":"264","line":24,"column":7,"nodeType":"190","endLine":24,"endColumn":16},{"ruleId":"207","severity":1,"message":"265","line":28,"column":10,"nodeType":"209","endLine":28,"endColumn":16,"suggestions":"267"},{"ruleId":"188","severity":1,"message":"268","line":30,"column":11,"nodeType":"190","messageId":"191","endLine":30,"endColumn":16},{"ruleId":"269","severity":2,"message":"270","line":30,"column":23,"nodeType":"190","messageId":"271","endLine":30,"endColumn":31},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["272"],["273"],"'Button' is defined but never used.","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'ChatContext' is defined but never used.","'getCatsById' is assigned a value but never used.","'users' is assigned a value but never used.","'getUsers' is assigned a value but never used.","'catZip' is assigned a value but never used.","'cats' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'getCats', and 'getUsersById'. Either include them or remove the dependency array.","ArrayExpression",["274"],"'CardText' is defined but never used.","'img' is defined but never used.","'Row' is defined but never used.","'CardDeck' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'CatCard' is defined but never used.","'CatContext' is defined but never used.","'UserContext' is defined but never used.","'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.",["272"],["273"],"'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'getCatById', 'getCats', and 'getUsers'. Either include them or remove the dependency array.",["275"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getChatById' is assigned a value but never used.","'getUsersById' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cat.id', 'catId', 'chats', 'getCatById', and 'getChats'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has a missing dependency: 'cat.id'. Either include it or remove the dependency array.",["277"],"'chats' is assigned a value but never used.","'history' is assigned a value but never used.","'catId' is assigned a value but never used.","'componentDidMount' is defined but never used.","'deleteChat' is assigned a value but never used.","'updateChat' is assigned a value but never used.","'getCats' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'cat' is assigned a value but never used.","'newGuy' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'catId', 'chatId', 'getCatById', and 'getChats'. Either include them or remove the dependency array.",["278"],"'useHistory' is defined but never used.","'getCatById' is assigned a value but never used.","'deleteCat' is assigned a value but never used.","'setCat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCats' and 'getChats'. Either include them or remove the dependency array.",["279"],"'React' is defined but never used.","'Component' is defined but never used.","'Doughnut' is defined but never used.","'adoptedCats' is assigned a value but never used.","'unadoptedCats' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useEffect\" is called in function \"window.onload\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook useEffect has an unnecessary dependency: 'cats'. Either exclude it or remove the dependency array. Outer scope values like 'cats' aren't valid dependencies because mutating them doesn't re-render the component.",["280"],["281"],"'chart' is assigned a value but never used.","no-undef","'CanvasJS' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"294","fix":"296"},"Update the dependencies array to be: [currentUser, getCats, getUsersById]",{"range":"297","text":"298"},"Update the dependencies array to be: [getCatById, getCats, getUsers]",{"range":"299","text":"300"},"Update the dependencies array to be: [cat.id, catId, chats, getCatById, getChats]",{"range":"301","text":"302"},"Update the dependencies array to be: [cat.id, chats]",{"range":"303","text":"304"},"Update the dependencies array to be: [catId, chatId, getCatById, getChats]",{"range":"305","text":"306"},"Update the dependencies array to be: [getCats, getChats]",{"range":"307","text":"308"},"Update the dependencies array to be: []",{"range":"309","text":"310"},{"range":"311","text":"310"},[2059,2061],"[currentUser, getCats, getUsersById]",[1879,1881],"[getCatById, getCats, getUsers]",[1379,1381],"[cat.id, catId, chats, getCatById, getChats]",[1535,1542],"[cat.id, chats]",[1919,1921],"[catId, chatId, getCatById, getChats]",[843,845],"[getCats, getChats]",[816,822],"[]",[1050,1056]]