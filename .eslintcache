[{"C:\\Users\\Stephanie\\workspace\\capstone\\src\\index.js":"1","C:\\Users\\Stephanie\\workspace\\capstone\\src\\reportWebVitals.js":"2","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\PropsAndState.js":"3","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsProvider.js":"4","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsList.js":"5","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatCard.js":"6","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Capstone.js":"7","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Login.js":"8","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\ApplicationViews.js":"9","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Register.js":"10","C:\\Users\\Stephanie\\workspace\\capstone\\src\\Home.js":"11","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatForm.js":"12","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatDetails.js":"13","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Users\\UsersProvider.js":"14","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatProvider.js":"15","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatCard.js":"16","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatForm.js":"17","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatDetails.js":"18","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\Chart.js":"19","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\NavBar.js":"20"},{"size":382,"mtime":1614107743840,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1611956400733,"results":"23","hashOfConfig":"22"},{"size":166,"mtime":1612983511871,"results":"24","hashOfConfig":"22"},{"size":2191,"mtime":1614107665092,"results":"25","hashOfConfig":"22"},{"size":2373,"mtime":1614107621692,"results":"26","hashOfConfig":"22"},{"size":2165,"mtime":1614107323669,"results":"27","hashOfConfig":"22"},{"size":684,"mtime":1613072800338,"results":"28","hashOfConfig":"22"},{"size":2422,"mtime":1612983511877,"results":"29","hashOfConfig":"22"},{"size":1482,"mtime":1614107061458,"results":"30","hashOfConfig":"22"},{"size":3529,"mtime":1612296200994,"results":"31","hashOfConfig":"22"},{"size":276,"mtime":1612192261847,"results":"32","hashOfConfig":"22"},{"size":5920,"mtime":1614107388041,"results":"33","hashOfConfig":"22"},{"size":3676,"mtime":1614107360740,"results":"34","hashOfConfig":"22"},{"size":1304,"mtime":1612983511873,"results":"35","hashOfConfig":"22"},{"size":1667,"mtime":1612676527357,"results":"36","hashOfConfig":"22"},{"size":1370,"mtime":1614107257712,"results":"37","hashOfConfig":"22"},{"size":3581,"mtime":1613604689826,"results":"38","hashOfConfig":"22"},{"size":1407,"mtime":1612983511862,"results":"39","hashOfConfig":"22"},{"size":2254,"mtime":1614107230928,"results":"40","hashOfConfig":"22"},{"size":1735,"mtime":1614107711147,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1akukpu",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Stephanie\\workspace\\capstone\\src\\index.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\reportWebVitals.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\PropsAndState.js",["90"],"import React, { useState } from \"react\"\r\n\r\nexport const PropsAndState = ({ yourName }) => {\r\n \r\n\r\n  return (\r\n    <>\r\n      <h3>Welcome, {yourName} </h3>\r\n    </>\r\n  )\r\n}",["91","92"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatsList.js",["93","94","95","96"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatCard.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Capstone.js",[],["97","98"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Login.js",["99","100","101","102","103","104","105","106"],"import React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { CatCard } from \"../Cats/CatCard\";\r\nimport { CatContext } from \"../Cats/CatsProvider\";\r\nimport { UserContext } from \"../Users/UsersProvider\";\r\nimport \"./Login.css\"\r\n\r\n\r\n\r\nexport const Login = props => {\r\n    const email = useRef()\r\n    const password = useRef()\r\n    const existDialog = useRef()\r\n    const history = useHistory()\r\n \r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => user.length ? user[0] : false)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then(exists => {\r\n                if (exists) {\r\n                    localStorage.setItem(\"capstone_customer\", exists.id)\r\n\r\n                    history.push(\"/cats\")\r\n                } else {\r\n                    existDialog.current.showModal()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main className=\"container--login\">\r\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\r\n                <div>User does not exist</div>\r\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <section>\r\n                <form className=\"form--login\" onSubmit={handleLogin}>\r\n                    <h1>Mew Girl</h1>\r\n                    <h2>Please sign in</h2>\r\n                    <fieldset>\r\n                        <label htmlFor=\"inputEmail\"> Email address </label>\r\n                        <input ref={email} type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            required autoFocus />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button type=\"submit\">\r\n                            Sign in\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n            <section className=\"link--register\">\r\n                <Link to=\"/register\">Not a member yet?</Link>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\auth\\Register.js",["107"],"import React, { useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\nexport const Register = (props) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const zip = useRef()\r\n    const verifyPassword = useRef()\r\n    const conflictDialog = useRef()\r\n    const history = useHistory()\r\n    \r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n        .then(res => res.json())\r\n        .then(user => !!user.length)\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        \r\n        \r\n        existingUserCheck()\r\n        .then((userExists) => {\r\n            if (!userExists) {\r\n                fetch(\"http://localhost:8088/users\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email.current.value,\r\n                        name: `${firstName.current.value} ${lastName.current.value}`,\r\n                        zip: parseInt(zip.current.value)\r\n                        \r\n                    })\r\n                })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                localStorage.setItem(\"capstone_customer\", createdUser.id)\r\n                                history.push(\"/cats\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Mew Girl</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputZip\"> Zip Code </label>\r\n                    <input ref={zip} type=\"zip\" name=\"zip\" className=\"form-control\" placeholder=\"Zip Code\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\Home.js",[],["108","109"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatForm.js",["110","111","112"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\CatDetails.js",["113","114","115"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Users\\UsersProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatProvider.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatCard.js",[],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatForm.js",["116","117","118","119","120"],"import { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { useHistory, useParams, } from 'react-router-dom';\r\nimport React, { useContext, useEffect,useState } from \"react\"\r\nimport { CatContext } from '../Cats/CatsProvider';\r\nimport { ChatContext } from './ChatProvider';\r\nimport { ChatCard } from './ChatCard';\r\n\r\n\r\n\r\nexport const ChatForm = () => {\r\n    const { getChats, addChat } = useContext(ChatContext)\r\n    const { getCatById } = useContext(CatContext)\r\n    const [filteredChats, setFilteredChats] = useState([])\r\n    const currentUser = (localStorage.getItem(\"capstone_customer\"))\r\n\r\n    /* -------------------- ASSIGN PROPS TO A CHAT AND HOLD STATE OF CHAT IN CURRENT VIEW -------------------- */\r\n\r\n    const [chat, setChat] = useState({\r\n        note: \"\",\r\n        catId: 0,\r\n        userId: 0\r\n    })\r\n\r\n    const [cat, setCat] =useState({})\r\n    /* --------------WAIT FOR DATA BEFORE BTN IS ACTIVE -------------------- */\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    /* -------------------- ACCESS THE ID OF A CHAT SO THAT YOU CAN FETCH THE ONE YOU WANT TO EDIT-------------------- */\r\n\r\n    const { catId } = useParams();\r\n    const { chatId } = useParams()\r\n\r\n    /* -------------------GET CATS BY ID W/ PARAMS, THEN GET CHATS-------------------- */\r\n    useEffect(() => {\r\n        getCatById(catId)\r\n        if (chatId) {\r\n            getChats()\r\n                .then(chat => {\r\n                    setChat(chat)\r\n                    setIsLoading(false)\r\n                    setFilteredChats(chat)\r\n                })\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    /* -------------------CHECK CURRENT USER AND SET NEW PROPS W/ DOT NOTATION -------------------- */\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newChat = { ...chat }\r\n        newChat[event.target.id] = event.target.value\r\n        const currentUser = localStorage.getItem(\"capstone_customer\")\r\n        newChat.userId = currentUser\r\n        console.log(newChat, \"chat adds?\")\r\n        setChat(newChat)\r\n    }\r\n    const handleAddChat = (event) => {\r\n        \r\n          //POST - add\r\n        addChat({\r\n                id: chat.id,\r\n                note: chat.note,\r\n                catId: parseInt(catId),\r\n                userId: parseInt(chat.userId)\r\n\r\n            })\r\n.then(setCat(catId))    \r\n \r\n    }\r\n\r\n    /* -------------------- ALLOW USERS TO ADD A CHAT AND DESIGNATE PROPS USING FORM -------------------- */\r\n    return (\r\n        <Form>\r\n            <h2>Cat Chat</h2>\r\n            <div className=\"chat\"></div>\r\n            <FormGroup>\r\n                <Label for=\"newChat\"></Label>\r\n                <Input type=\"type\" name=\"chat\" id=\"note\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                    placeholder=\"Chat\" value={chat.note} />\r\n            </FormGroup>\r\n            <div>\r\n                <div className=\"refreshChat\">\r\n                    {\r\n                        filteredChats.map(chat => {\r\n                            // take the list of filteredCats you used in use state and give me their info\r\n                            return <ChatCard key={chat.id} note={chat.note} />\r\n                        })\r\n                    }\r\n                </div>\r\n                <Button color=\"success\" type=\"reset\"\r\n                    onClick={event => {\r\n                        handleAddChat()\r\n                    }}>\r\n                    {chatId ? \"Save Chat\" : \"Add Chat\"}</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\ChatDetails.js",["121","122","123","124","125","126","127","128","129","130"],"import React, { useContext,useState, useParams,useEffect, useHistory } from \"react\"\r\nimport { CatCard } from \"../Cats/CatCard\"\r\nimport { CatContext } from \"../Cats/CatsProvider\"\r\nimport { ChatCard } from \"./ChatCard\"\r\nimport { ChatContext } from \"./ChatProvider\"\r\n\r\n\r\nexport const ChatList = () => {\r\n  const { chats, getChats} = useContext(ChatContext)\r\n\r\n    //-------------------- CHAT INFO TO BE DISPLAYED ON THE DOM ------------\r\n\r\n\r\n useEffect(() => {\r\n    console.log(\"CHAT DETAILS RENDER\")\r\n    getChats()\r\n    \r\n\r\n  }, [])\r\n  return (\r\n    <div className=\"chats\">\r\n      {console.log(\"ChatList: Render\", chats)}\r\n      {\r\n        chats.map(chat => {\r\n          return <ChatCard key={chat.id} chat={chat} />\r\n        })\r\n      }\r\n      <div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\CatChat\\Chart.js",["131"],"C:\\Users\\Stephanie\\workspace\\capstone\\src\\components\\Cats\\NavBar.js",[],{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"132","severity":1,"message":"140","line":20,"column":12,"nodeType":"134","messageId":"135","endLine":20,"endColumn":16},{"ruleId":"132","severity":1,"message":"141","line":21,"column":12,"nodeType":"134","messageId":"135","endLine":21,"endColumn":21},{"ruleId":"132","severity":1,"message":"142","line":21,"column":23,"nodeType":"134","messageId":"135","endLine":21,"endColumn":35},{"ruleId":"143","severity":1,"message":"144","line":36,"column":8,"nodeType":"145","endLine":36,"endColumn":10,"suggestions":"146"},{"ruleId":"136","replacedBy":"147"},{"ruleId":"138","replacedBy":"148"},{"ruleId":"132","severity":1,"message":"149","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":27},{"ruleId":"132","severity":1,"message":"150","line":1,"column":29,"nodeType":"134","messageId":"135","endLine":1,"endColumn":38},{"ruleId":"132","severity":1,"message":"133","line":1,"column":48,"nodeType":"134","messageId":"135","endLine":1,"endColumn":56},{"ruleId":"132","severity":1,"message":"151","line":3,"column":22,"nodeType":"134","messageId":"135","endLine":3,"endColumn":31},{"ruleId":"132","severity":1,"message":"152","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"132","severity":1,"message":"153","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":20},{"ruleId":"132","severity":1,"message":"154","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":21},{"ruleId":"132","severity":1,"message":"155","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":19},{"ruleId":"132","severity":1,"message":"156","line":10,"column":11,"nodeType":"134","messageId":"135","endLine":10,"endColumn":25},{"ruleId":"136","replacedBy":"157"},{"ruleId":"138","replacedBy":"158"},{"ruleId":"132","severity":1,"message":"141","line":42,"column":10,"nodeType":"134","messageId":"135","endLine":42,"endColumn":19},{"ruleId":"143","severity":1,"message":"159","line":54,"column":6,"nodeType":"145","endLine":54,"endColumn":8,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":111,"column":15,"nodeType":"163","endLine":111,"endColumn":79},{"ruleId":"132","severity":1,"message":"141","line":17,"column":10,"nodeType":"134","messageId":"135","endLine":17,"endColumn":19},{"ruleId":"143","severity":1,"message":"164","line":28,"column":6,"nodeType":"145","endLine":28,"endColumn":8,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":34,"column":6,"nodeType":"145","endLine":34,"endColumn":13,"suggestions":"167"},{"ruleId":"132","severity":1,"message":"168","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":20},{"ruleId":"132","severity":1,"message":"169","line":14,"column":11,"nodeType":"134","messageId":"135","endLine":14,"endColumn":22},{"ruleId":"132","severity":1,"message":"170","line":24,"column":12,"nodeType":"134","messageId":"135","endLine":24,"endColumn":15},{"ruleId":"132","severity":1,"message":"141","line":27,"column":12,"nodeType":"134","messageId":"135","endLine":27,"endColumn":21},{"ruleId":"143","severity":1,"message":"171","line":47,"column":8,"nodeType":"145","endLine":47,"endColumn":10,"suggestions":"172"},{"ruleId":"132","severity":1,"message":"151","line":1,"column":38,"nodeType":"134","messageId":"135","endLine":1,"endColumn":47},{"ruleId":"132","severity":1,"message":"168","line":1,"column":59,"nodeType":"134","messageId":"135","endLine":1,"endColumn":69},{"ruleId":"132","severity":1,"message":"152","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":17},{"ruleId":"132","severity":1,"message":"173","line":9,"column":11,"nodeType":"134","messageId":"135","endLine":9,"endColumn":21},{"ruleId":"132","severity":1,"message":"174","line":9,"column":23,"nodeType":"134","messageId":"135","endLine":9,"endColumn":32},{"ruleId":"132","severity":1,"message":"140","line":9,"column":43,"nodeType":"134","messageId":"135","endLine":9,"endColumn":47},{"ruleId":"132","severity":1,"message":"175","line":10,"column":28,"nodeType":"134","messageId":"135","endLine":10,"endColumn":39},{"ruleId":"132","severity":1,"message":"170","line":15,"column":10,"nodeType":"134","messageId":"135","endLine":15,"endColumn":13},{"ruleId":"132","severity":1,"message":"176","line":15,"column":15,"nodeType":"134","messageId":"135","endLine":15,"endColumn":21},{"ruleId":"143","severity":1,"message":"177","line":25,"column":8,"nodeType":"145","endLine":25,"endColumn":10,"suggestions":"178"},{"ruleId":"143","severity":1,"message":"179","line":14,"column":8,"nodeType":"145","endLine":14,"endColumn":10,"suggestions":"180"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["181"],"no-negated-in-lhs",["182"],"'cats' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'getCats', and 'getUsersById'. Either include them or remove the dependency array.","ArrayExpression",["183"],["181"],["182"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'CatCard' is defined but never used.","'CatContext' is defined but never used.","'UserContext' is defined but never used.","'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.",["181"],["182"],"React Hook useEffect has missing dependencies: 'getCatById', 'getCats', and 'getUsers'. Either include them or remove the dependency array.",["184"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'catId', 'getCatById', and 'getChats'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'cat.id'. Either include it or remove the dependency array.",["186"],"'useHistory' is defined but never used.","'currentUser' is assigned a value but never used.","'cat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'catId', 'chatId', 'getCatById', and 'getChats'. Either include them or remove the dependency array.",["187"],"'getCatById' is assigned a value but never used.","'deleteCat' is assigned a value but never used.","'getChatById' is assigned a value but never used.","'setCat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCats' and 'getChats'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'getCats'. Either include it or remove the dependency array.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [currentUser, getCats, getUsersById]",{"range":"204","text":"205"},"Update the dependencies array to be: [getCatById, getCats, getUsers]",{"range":"206","text":"207"},"Update the dependencies array to be: [catId, getCatById, getChats]",{"range":"208","text":"209"},"Update the dependencies array to be: [cat.id, chats]",{"range":"210","text":"211"},"Update the dependencies array to be: [catId, chatId, getCatById, getChats]",{"range":"212","text":"213"},"Update the dependencies array to be: [getCats, getChats]",{"range":"214","text":"215"},"Update the dependencies array to be: [getCats]",{"range":"216","text":"217"},[1750,1752],"[currentUser, getCats, getUsersById]",[1781,1783],"[getCatById, getCats, getUsers]",[1044,1046],"[catId, getCatById, getChats]",[1197,1204],"[cat.id, chats]",[1643,1645],"[catId, chatId, getCatById, getChats]",[843,845],"[getCats, getChats]",[436,438],"[getCats]"]